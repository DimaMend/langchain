interactions:
- request:
    body: '{"messages": [{"content": "Given a chat history and the latest user question
      which might reference context in the chat history, formulate a standalone question
      which can be understood without the chat history. Do NOT answer the question,
      just reformulate it if needed and otherwise return it as is.", "role": "system"},
      {"content": "What is Task Decomposition?", "role": "user"}, {"content": "Task
      decomposition is a technique used to break down complex tasks into smaller and
      simpler steps. This process helps agents or models handle intricate tasks more
      effectively by dividing them into manageable subtasks. Different methods like
      Chain of Thought and Tree of Thoughts are employed to decompose tasks into multiple
      steps for easier execution.", "role": "assistant"}, {"content": "What are common
      ways of doing it?", "role": "user"}], "model": "gpt-3.5-turbo", "n": 1, "stream":
      false, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '907'
      content-type:
      - application/json
      cookie:
      - __cf_bm=S9CaKJjlRKMgapR4feoPhcVCXu5HNw9ouMhsxuXq.sU-1727447408-1.0.1.1-B03gfQ5b8oM_0t6ZzWgUnOaIkcduwHoYgZP7H25Nf0pCKbUSHSBUbDPq2zhHWxP7OPqNXr8lGZCszwLJOlg8YQ;
        _cfuvid=ty_zC0bzJUD.U5UPPZYqWFP.KB3qzsUYJFkIrsa_930-1727447408230-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.48.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.48.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA3RQu27CQBDs+YrV1YAMGBxooiivIlWKiCKK0GGv7Qt3t87tWgIh/j0680yRZouZ
        ndHM7HsAyhRqASqvteSusYOHx9lr+zzZzkZpVizfft5fzHg3+ZjPy2z6pPpRQetvzOWsGubkGoti
        yB/pPKAWjK6jbJylaZYmdx3hqEAbZVUjg8lwOpA2rGmQjMbTk7ImkyOrBXz2AAD23Y0ZfYFbtYCk
        f0YcMusK1eLyBKAC2YgozWxYtBfVv5I5eUHfxV7WWkAHBCaHkJNz5MGh1FQwtIwFlBRANG+gwFiP
        2MR+97d+AcuWdezjW2tP+OES0FLVBFrzib/gpfGG61VAzeRjGBZqVMceegBf3RDtn26qCeQaWQlt
        0EfDUTo++qnr9jfsaSUlJNre4NN/VasCRRvLN3OqY0Ljq6tDconZ9VS8Y0G3Ko2vMDTBdOt2axx6
        vwAAAP//AwBIWM4CXAIAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c9c309dfe6d8f65-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 27 Sep 2024 14:30:08 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '280'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3999809'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 2ms
      x-request-id:
      - req_98cb44a57d9ca8e0ed555d9b09ee48b6
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[3923, 527, 1063, 4279, 5528, 1511, 369, 3465, 66266, 30]],
      "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '134'
      content-type:
      - application/json
      cookie:
      - __cf_bm=_SkX10_lz_dX1guPhghsUYAz4_9kWqoLA5uNrUkQB18-1727447406-1.0.1.1-Hbwqr14cIbBH0gj8B1mx9a96FHwcQ0zFiSd700EllAydhGfmuJvCorr0hPCbtfl2nG4OnDCQCd1OOKW5VHRCzg;
        _cfuvid=_gLrQReNbyL5vxKd7xmYmcYUDElVbJf1pTZYccPx6LE-1727447406444-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.48.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.48.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c9c30a098204d10-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 27 Sep 2024 14:30:08 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      openai-model:
      - text-embedding-ada-002
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '21'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '5000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '4999989'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_ac1f41335048d5c76c9959c0278780df
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "You are an assistant for question-answering
      tasks. Use the following pieces of retrieved context to answer the question.
      If you don''t know the answer, say that you don''t know. Use three sentences
      maximum and keep the answer concise.\n\nTree of Thoughts (Yao et al. 2023) extends
      CoT by exploring multiple reasoning possibilities at each step. It first decomposes
      the problem into multiple thought steps and generates multiple thoughts per
      step, creating a tree structure. The search process can be BFS (breadth-first
      search) or DFS (depth-first search) with each state evaluated by a classifier
      (via a prompt) or majority vote.\nTask decomposition can be done (1) by LLM
      with simple prompting like \"Steps for XYZ.\\n1.\", \"What are the subgoals
      for achieving XYZ?\", (2) by using task-specific instructions; e.g. \"Write
      a story outline.\" for writing a novel, or (3) with human inputs.\n\nFig. 1.
      Overview of a LLM-powered autonomous agent system.\nComponent One: Planning#\nA
      complicated task usually involves many steps. An agent needs to know what they
      are and plan ahead.\nTask Decomposition#\nChain of thought (CoT; Wei et al.
      2022) has become a standard prompting technique for enhancing model performance
      on complex tasks. The model is instructed to \u201cthink step by step\u201d
      to utilize more test-time computation to decompose hard tasks into smaller and
      simpler steps. CoT transforms big tasks into multiple manageable tasks and shed
      lights into an interpretation of the model\u2019s thinking process.\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n\nFig.
      9. Comparison of MIPS algorithms, measured in recall@10. (Image source: Google
      Blog, 2020)\nCheck more MIPS algorithms and performance comparison in ann-benchmarks.com.\nComponent
      Three: Tool Use#\nTool use is a remarkable and distinguishing characteristic
      of human beings. We create, modify and utilize external objects to do things
      that go beyond our physical and cognitive limits. Equipping LLMs with external
      tools can significantly extend the model capabilities.", "role": "system"},
      {"content": "What is Task Decomposition?", "role": "user"}, {"content": "Task
      decomposition is a technique used to break down complex tasks into smaller and
      simpler steps. This process helps agents or models handle intricate tasks more
      effectively by dividing them into manageable subtasks. Different methods like
      Chain of Thought and Tree of Thoughts are employed to decompose tasks into multiple
      steps for easier execution.", "role": "assistant"}, {"content": "What are common
      ways of doing it?", "role": "user"}], "model": "gpt-3.5-turbo", "n": 1, "stream":
      false, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3199'
      content-type:
      - application/json
      cookie:
      - __cf_bm=S9CaKJjlRKMgapR4feoPhcVCXu5HNw9ouMhsxuXq.sU-1727447408-1.0.1.1-B03gfQ5b8oM_0t6ZzWgUnOaIkcduwHoYgZP7H25Nf0pCKbUSHSBUbDPq2zhHWxP7OPqNXr8lGZCszwLJOlg8YQ;
        _cfuvid=ty_zC0bzJUD.U5UPPZYqWFP.KB3qzsUYJFkIrsa_930-1727447408230-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.48.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.48.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//dFPLbtswELznKxY824adOnHrW1oUuaTooekjbQpjRa1ExhTJcpeOjSD/
        XpB27PTQiyDMaAazu6OnMwBlW7UEpQ2KHqIbX324vN483M3X8rD7+tnMHrdX13MXt667+vhNjYoi
        NA+k5UU10WGIjsQGv6d1IhQqrrPF+WI+X8yn7yoxhJZckfVRxm8mF2PJqQnj6ez84qA0wWpitYRf
        ZwAAT/VZMvqWtmoJ09ELMhAz9qSWx48AVAquIAqZLQt6UaMTqYMX8jX2LfIaWirBA9uSHDR6aAhQ
        G0sbakFMCrk3sMFkQ2YYSExoGThrA8iQ2foeYgpDlPImpI23fzIxOLsmuFdfhCJDFxL8uPt5r+DR
        ioGbm088KrKNbasMeT3mSNp2VoP1LCnrEuho8z1ZIUBgCWkHIYuznkb3CkIC63VIMSSsEUwe0IP1
        MQtP4NYQE2CMKaA2xGDIRWgS4Rra8Ohhf7ZtjcBgvQTgAZ2jNIIhJIIBPfaEjSPg3PQB3X6chkQo
        AW1J57o79C1k31IqOy9jTeD97rTfw5gM1HWkxW7I7UaAPXnhMkWtBdcLRIce0BC21dTjxvYodLyG
        9ZKsrkh1rDvta98SEDJNXl88UZcZS+N8du6APx8r5EIfU2j4wB/xznrLZpUIOfhSF5YQVWWfzwB+
        16rmf9qn9kVYSViTL4aX54eqqtPfcWLfzg6kBEF3whfT2f9Uq5YEreNXhVf7hNb3J4fpMWadU/GO
        hYZVZ31PKSZb+1+38Xz2FwAA//8DABeIHKz+AwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c9c30a20bf88f65-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 27 Sep 2024 14:30:10 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '1162'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3999245'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 11ms
      x-request-id:
      - req_717cf1e3f1b844d3878988658ecad60e
    status:
      code: 200
      message: OK
version: 1
