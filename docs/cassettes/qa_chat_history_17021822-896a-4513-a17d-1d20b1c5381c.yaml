interactions:
- request:
    body: '{"messages": [{"content": "Given a chat history and the latest user question
      which might reference context in the chat history, formulate a standalone question
      which can be understood without the chat history. Do NOT answer the question,
      just reformulate it if needed and otherwise return it as is.", "role": "system"},
      {"content": "What is Task Decomposition?", "role": "user"}, {"content": "Task
      decomposition is a technique used to break down complex tasks into smaller and
      simpler steps. This process helps agents or models handle difficult tasks by
      dividing them into more manageable subtasks. Different methods like Chain of
      Thought and Tree of Thoughts are used to decompose tasks into multiple steps,
      enhancing performance and aiding in the interpretation of the thinking process.",
      "role": "assistant"}, {"content": "What are common ways of doing it?", "role":
      "user"}], "model": "gpt-3.5-turbo", "n": 1, "stream": false, "temperature":
      0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '950'
      content-type:
      - application/json
      cookie:
      - __cf_bm=svG8xpfYNf8HqPokXq6.JTTlLsab.I6GhP0EMlMZWgw-1727449104-1.0.1.1-yp19_wwwbmkCHd5levnTVG3Zg.GUBsKC8J2naKZZXuKRyeDpatIb9ex0HD4wSiBhda9N1O0nRFGYVUMkLui3Dw;
        _cfuvid=FRhBnfl0B.OPjXlwpuqkQuVfmulpO0tJQjBRXFSbRTU-1727449104892-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.48.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.48.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//dJBPTwIxEMXvfIpJz0BYZEH3YoiJ8WCMB5WDMaTsDruFtlM7s4mG8N1N
        V/558NLD+/VN3nu7HoAylSpAlY2W0gU7mN9NzcP9Mz49xtkmvMyv/evb9nOTzfPFeKr6yUGrDZZy
        dA1LcsGiGPK/uIyoBdPVbDaeTSY32SjvgKMKbbLVQQZXw3wgbVzRYJSN84OzIVMiqwLeewAAu+5N
        GX2FX6qAUf+oOGTWNari9AlARbJJUZrZsGgvqn+GJXlB38VeNFpARwQmh1CSc+TBoTRUMbSMFawp
        gmjeQoWpHrFJ/W4v70Vct6xTH99ae9D3p4CW6hBpxQd+0tfGG26WETWTT2FYKKiO7nsAH90Q7Z9u
        KkRyQZZCW/TpYJYfhlDn7S/oEQqJthf69F/XskLRxvLFnOo3ofH1+cLoFLPrqfibBd1ybXyNMUTT
        rdutse/9AAAA//8DAMO1GcVcAgAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c9c5a0a5ced4cf4-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 27 Sep 2024 14:58:25 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '318'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3999797'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 3ms
      x-request-id:
      - req_5872cfbddaffa9091a04a2d066bd3b96
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[3923, 527, 1063, 4279, 5528, 1511, 369, 3465, 66266, 30]],
      "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '134'
      content-type:
      - application/json
      cookie:
      - __cf_bm=IkziaTvtUmKlpJ6hBD6feB_TIDyI4boVZA3o2BPhCL8-1727449102-1.0.1.1-O.6GwXzEQt97Xmx063yop4OpodgHCXvPoDrm2j1o11fitCx.HXCK6l3aOcxSYn8ImB8TrwwExhm9.i3_joGUXg;
        _cfuvid=mUjgjvAf3oXRxknfOJFguM.7C1A0icg48urbm4Rrj7I-1727449102443-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.48.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.48.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c9c5a1088238fb4-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 27 Sep 2024 14:58:26 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      openai-model:
      - text-embedding-ada-002
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '23'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '5000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '4999990'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_dc35507cff4b33b8c33d1edc59ab7d2a
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "You are an assistant for question-answering
      tasks. Use the following pieces of retrieved context to answer the question.
      If you don''t know the answer, say that you don''t know. Use three sentences
      maximum and keep the answer concise.\n\nTree of Thoughts (Yao et al. 2023) extends
      CoT by exploring multiple reasoning possibilities at each step. It first decomposes
      the problem into multiple thought steps and generates multiple thoughts per
      step, creating a tree structure. The search process can be BFS (breadth-first
      search) or DFS (depth-first search) with each state evaluated by a classifier
      (via a prompt) or majority vote.\nTask decomposition can be done (1) by LLM
      with simple prompting like \"Steps for XYZ.\\n1.\", \"What are the subgoals
      for achieving XYZ?\", (2) by using task-specific instructions; e.g. \"Write
      a story outline.\" for writing a novel, or (3) with human inputs.\n\nFig. 1.
      Overview of a LLM-powered autonomous agent system.\nComponent One: Planning#\nA
      complicated task usually involves many steps. An agent needs to know what they
      are and plan ahead.\nTask Decomposition#\nChain of thought (CoT; Wei et al.
      2022) has become a standard prompting technique for enhancing model performance
      on complex tasks. The model is instructed to \u201cthink step by step\u201d
      to utilize more test-time computation to decompose hard tasks into smaller and
      simpler steps. CoT transforms big tasks into multiple manageable tasks and shed
      lights into an interpretation of the model\u2019s thinking process.\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n\nFig.
      9. Comparison of MIPS algorithms, measured in recall@10. (Image source: Google
      Blog, 2020)\nCheck more MIPS algorithms and performance comparison in ann-benchmarks.com.\nComponent
      Three: Tool Use#\nTool use is a remarkable and distinguishing characteristic
      of human beings. We create, modify and utilize external objects to do things
      that go beyond our physical and cognitive limits. Equipping LLMs with external
      tools can significantly extend the model capabilities.", "role": "system"},
      {"content": "What is Task Decomposition?", "role": "user"}, {"content": "Task
      decomposition is a technique used to break down complex tasks into smaller and
      simpler steps. This process helps agents or models handle difficult tasks by
      dividing them into more manageable subtasks. Different methods like Chain of
      Thought and Tree of Thoughts are used to decompose tasks into multiple steps,
      enhancing performance and aiding in the interpretation of the thinking process.",
      "role": "assistant"}, {"content": "What are common ways of doing it?", "role":
      "user"}], "model": "gpt-3.5-turbo", "n": 1, "stream": false, "temperature":
      0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3242'
      content-type:
      - application/json
      cookie:
      - __cf_bm=svG8xpfYNf8HqPokXq6.JTTlLsab.I6GhP0EMlMZWgw-1727449104-1.0.1.1-yp19_wwwbmkCHd5levnTVG3Zg.GUBsKC8J2naKZZXuKRyeDpatIb9ex0HD4wSiBhda9N1O0nRFGYVUMkLui3Dw;
        _cfuvid=FRhBnfl0B.OPjXlwpuqkQuVfmulpO0tJQjBRXFSbRTU-1727449104892-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.48.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.48.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//dFLBTlsxELznK1Y+J1GgEEpuFfRQCSpVgCgtVeT47Xvexs/revcFEOLf
        KzsQ0kMvlrXjGc165nkEYKgxCzDOW3V9CpNPZ3P6so537ttZF86btr/MR1cRb85vbr9+NuPC4NVv
        dPrGmjruU0AljlvYZbSKRfXg5PDk6Oj0YDavQM8NhkLrkk4+TI8nOuQVT2YHh8evTM/kUMwCfo4A
        AJ7rWTzGBh/NAmbjt0mPIrZDs9g9AjCZQ5kYK0KiNqoZv4OOo2Kstq+trKHBYpyFinNwNsIKwTpP
        uMEG1GceOg8bm4kHgR7VcyMgg/NgBQah2EHK3CctN0XnI/0ZUCDQGuHeXCkmgZYzfL/7cW/ggdTD
        xcWljAttQ02lWVlPJKGjlhxQFM2DK4Z2MreZFMGCKOcn4EEDRRzfG+AMFB3nxNlWC37obQSKaVCZ
        wrVHQbApZbbOo4DHkIAirDLadXnf8EOEbXiP1YgARWWQ3oaAuUIcMaqMod9SSAGtEOa6l+0KWIzU
        ZAWUIdoNdVZx94Hqsey7CtiDjQ1QX7ZHSJhbzr2NDqf7MWVsB7GlJnEI4XX+sss9cFfU5BXfzVuK
        JH6Z0QrHkrEoJ1PRlxHAr9qv4Z/KmG16S+U1xiI4P/y41TPvld5D30BltWFvfjr/H2vZoFoKstdS
        s3VIsXtXmO1s1j2NPIliv2wpdphTplra+hsvo78AAAD//wMAjmrm5LMDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c9c5a1338834cf4-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 27 Sep 2024 14:58:27 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '870'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3999236'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 11ms
      x-request-id:
      - req_3643dc4eeb24d8b46a61cf0db5d443d4
    status:
      code: 200
      message: OK
version: 1
