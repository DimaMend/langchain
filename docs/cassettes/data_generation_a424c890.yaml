interactions:
- request:
    body: '{"messages": [{"content": "This is a test about generating synthetic data
      about medical_billing. Examples below:\n\nPatient ID: 123456, Patient Name:
      John Doe, Diagnosis Code: \n            J20.9, Procedure Code: 99203, Total
      Charge: $500, Insurance Claim Amount: $350\n\nPatient ID: 789012, Patient Name:
      Johnson Smith, Diagnosis \n            Code: M54.5, Procedure Code: 99213, Total
      Charge: $150, Insurance Claim Amount: $120\n\nPatient ID: 345678, Patient Name:
      Emily Stone, Diagnosis Code: \n            E11.9, Procedure Code: 99214, Total
      Charge: $300, Insurance Claim Amount: $250\n\nNow you generate synthetic data
      about medical_billing. Make sure to the name must be chosen at random. Make
      it something you wouldn''t normally choose.:", "role": "user"}], "model": "gpt-3.5-turbo",
      "function_call": {"name": "_OutputFormatter"}, "functions": [{"name": "_OutputFormatter",
      "description": "Output formatter. Should always be used to format your response
      to the user.", "parameters": {"properties": {"output": {"properties": {"patient_id":
      {"type": "integer"}, "patient_name": {"type": "string"}, "diagnosis_code": {"type":
      "string"}, "procedure_code": {"type": "string"}, "total_charge": {"type": "number"},
      "insurance_claim_amount": {"type": "number"}}, "required": ["patient_id", "patient_name",
      "diagnosis_code", "procedure_code", "total_charge", "insurance_claim_amount"],
      "type": "object"}}, "required": ["output"], "type": "object"}}], "n": 1, "stream":
      false, "temperature": 1.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1492'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.45.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.45.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA3SSMW/bMBCFd/0K4mbZkCw7jrW1Q1tkaIagU1UQNEVLtEmeSh6Btob/e0HJsZwA
        WTTcd+/p3R3PGWOgW6gZyF6QtINZfPr848k9R/FSqNVv3H//isejxur0r7PdCfKkwP1RSXpVLSXa
        wSjS6CYsvRKkkmu5XW2rotyUmxFYbJVJsm6gRbXcLCj6PS6KcrW5KnvUUgWo2c+MMcbO4zdldK36
        AzUr8teKVSGITkF9a2IMPJpUARGCDiQcQT5DiY6US7FdNOYOHKKTKT2Xwpg3hoyBE3a05M+Rhkhf
        0FtBpPydM2MgfBetcpSiw7kBHJsbqM8NDIK0csR120C9e9w+bNb5XE3+DdQNvAgrHPWCPWHvAroG
        8gZaLTqHQQcusZ36vq2L5W6Eg0ep2ujVDHe7VbEeISEJw2UvfJfQuijyBrQL0QsnFZdGaMuFxehS
        zKooLhe4TXS5245XhxiEua4te9cABrvB4z68WysctNOh516JgC5tJRAO0x8uGWO/xnvHNydMA9mB
        OOFJuWS4enic/GB+YjNdV1c4jXqrV2X5kYq3ioQ24e7IMCXUrpsdilvMcU4IfwMpyw/adcoPXt8e
        UXbJ/gMAAP//AwBinxSYQwMAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c8e46c9aa5a8fd9-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 25 Sep 2024 21:58:36 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=UqeSYHEVqgoYmBSjHL.7YzlscjeU4c0swS.EbAivzGM-1727301516-1.0.1.1-WU9qK1EcrgnCGWDJmUW7obMs4IWXciBpbMpzD0tVuUxG.DBBL_ytNqegYK0U1Nckbn4cV6DKRxcw802drnWb6A;
        path=/; expires=Wed, 25-Sep-24 22:28:36 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=T0h4_wXPgesdugPjrtHdMesmmv2xWiNsXzd89Z5Zlig-1727301516571-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '582'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3999806'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 2ms
      x-request-id:
      - req_75c637cbdc8a6e7aaefb03d855573328
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "This is a test about generating synthetic data
      about medical_billing. Examples below:\n\nPatient ID: 789012, Patient Name:
      Johnson Smith, Diagnosis \n            Code: M54.5, Procedure Code: 99213, Total
      Charge: $150, Insurance Claim Amount: $120\n\nPatient ID: 345678, Patient Name:
      Emily Stone, Diagnosis Code: \n            E11.9, Procedure Code: 99214, Total
      Charge: $300, Insurance Claim Amount: $250\n\npatient_id: 987654, patient_name:
      Samantha Johnson, diagnosis_code: H40.9, procedure_code: 99204, total_charge:
      400.0, insurance_claim_amount: 300.0\n\nNow you generate synthetic data about
      medical_billing. Make sure to the name must be chosen at random. Make it something
      you wouldn''t normally choose.:", "role": "user"}], "model": "gpt-3.5-turbo",
      "function_call": {"name": "_OutputFormatter"}, "functions": [{"name": "_OutputFormatter",
      "description": "Output formatter. Should always be used to format your response
      to the user.", "parameters": {"properties": {"output": {"properties": {"patient_id":
      {"type": "integer"}, "patient_name": {"type": "string"}, "diagnosis_code": {"type":
      "string"}, "procedure_code": {"type": "string"}, "total_charge": {"type": "number"},
      "insurance_claim_amount": {"type": "number"}}, "required": ["patient_id", "patient_name",
      "diagnosis_code", "procedure_code", "total_charge", "insurance_claim_amount"],
      "type": "object"}}, "required": ["output"], "type": "object"}}], "n": 1, "stream":
      false, "temperature": 1.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1488'
      content-type:
      - application/json
      cookie:
      - __cf_bm=UqeSYHEVqgoYmBSjHL.7YzlscjeU4c0swS.EbAivzGM-1727301516-1.0.1.1-WU9qK1EcrgnCGWDJmUW7obMs4IWXciBpbMpzD0tVuUxG.DBBL_ytNqegYK0U1Nckbn4cV6DKRxcw802drnWb6A;
        _cfuvid=T0h4_wXPgesdugPjrtHdMesmmv2xWiNsXzd89Z5Zlig-1727301516571-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.45.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.45.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//dJJbj9MwEIXf8yuseU6rXDYtzRsgFgESIBAgQVDkOpPE4NiWPZZgq/53
        5PSS7kq85GG+OSdnZnxIGAPZQc1AjJzEZNXq+Ysvb83HV+++fbfVtnfPzOuH0b7ZqPzu/cse0qgw
        +18o6KJaCzNZhSSNPmHhkBNG13xbbMssr/LNDCbToYqywdKqXFcrCm5vVlleVGflaKRADzX7kTDG
        2GH+xoy6wz9Qsyy9VCb0ng8I9bWJMXBGxQpw76UnrgnSBQqjCXWMrYNSN6APWsT0reBKPTJkDDSf
        Zsv2QyAb6N64iROhu3FmDLgbwoSaYnQ4NGDm5gbqQwOWk0RNrewaqPOivKs26VKN/g3UDXwKffDs
        q9Hssxg1Dw/oGkgb6CQftPHSt8J0p9b7sljvZmidEdgFhwvc7YqsnCEZ4qoVI3dDREWVrbO0Aal9
        cFwLbIXicmr5ZIKOWYssW2fHI1wHO94syWEfPFfn7SVPGkCZwTqz90+2C73U0o+tQ+6NjsvxZOzp
        D8eEsZ/z2cOjS8ahJkstmd+oo2GxPZ8dlpe20OoCT+Ne62XxX1XbIXGp/M2t4ZRQ6mFxyK4x5znB
        //WEU9tLPaCzTl7fUnJM/gEAAP//AwBuTpr/SgMAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c8e46ceca4a8fd9-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 25 Sep 2024 21:58:37 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '661'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3999806'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 2ms
      x-request-id:
      - req_f1c8d0e42da6259795caec1c59b839c0
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "This is a test about generating synthetic data
      about medical_billing. Examples below:\n\nPatient ID: 345678, Patient Name:
      Emily Stone, Diagnosis Code: \n            E11.9, Procedure Code: 99214, Total
      Charge: $300, Insurance Claim Amount: $250\n\npatient_id: 987654, patient_name:
      Samantha Johnson, diagnosis_code: H40.9, procedure_code: 99204, total_charge:
      400.0, insurance_claim_amount: 300.0\n\npatient_id: 123456, patient_name: Rufus
      Von Schnauzer, diagnosis_code: F32.9, procedure_code: 99203, total_charge: 250.0,
      insurance_claim_amount: 200.0\n\nNow you generate synthetic data about medical_billing.
      Make sure to the name must be chosen at random. Make it something you wouldn''t
      normally choose.:", "role": "user"}], "model": "gpt-3.5-turbo", "function_call":
      {"name": "_OutputFormatter"}, "functions": [{"name": "_OutputFormatter", "description":
      "Output formatter. Should always be used to format your response to the user.",
      "parameters": {"properties": {"output": {"properties": {"patient_id": {"type":
      "integer"}, "patient_name": {"type": "string"}, "diagnosis_code": {"type": "string"},
      "procedure_code": {"type": "string"}, "total_charge": {"type": "number"}, "insurance_claim_amount":
      {"type": "number"}}, "required": ["patient_id", "patient_name", "diagnosis_code",
      "procedure_code", "total_charge", "insurance_claim_amount"], "type": "object"}},
      "required": ["output"], "type": "object"}}], "n": 1, "stream": false, "temperature":
      1.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1482'
      content-type:
      - application/json
      cookie:
      - __cf_bm=UqeSYHEVqgoYmBSjHL.7YzlscjeU4c0swS.EbAivzGM-1727301516-1.0.1.1-WU9qK1EcrgnCGWDJmUW7obMs4IWXciBpbMpzD0tVuUxG.DBBL_ytNqegYK0U1Nckbn4cV6DKRxcw802drnWb6A;
        _cfuvid=T0h4_wXPgesdugPjrtHdMesmmv2xWiNsXzd89Z5Zlig-1727301516571-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.45.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.45.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//dJJBb9swDIXv+RUCz05gJ3Hd+LZiWIdtQA/DtgLzYDAy4yiVJUGi0W1B
        /vsgO43TArv4wI/v+ZHUcSYEqAZKAXKPLDun5+/uvn1yu+9/aa2+3Gebj8+Hw+f2PbqH/PHhByRR
        YbcHkvyiWkjbOU2srBmx9IRM0TUrlsUqzfKsGEBnG9JR1jqerxb5nHu/tfM0W+Zn5d4qSQFK8XMm
        hBDH4RszmoZ+QynS5KXSUQjYEpSXJiHAWx0rgCGowGgYkglKa5hMjG16ra/Arjcypq8lav3KUAgw
        2A2W9UPPrucP1nfITP7KWQhA3/YdGY7R4ViBHZorKI8VOGRFhmvVVFCu85vidpNM1ehfQVnBV/Lo
        9sqguNMon56tbSpIKmgUtsYGFWppm7H1fl0sNgN03kpqek8T3BRZlg6QLaOu5R59G9EqTxdpUoEy
        ofdoJNVSo+pq7GxvYtZlkS/S0wkug52uluRp1wfU5+3N3jSAtq3zdhvebBd2yqiwrz1hsCYuJ7B1
        4x9OMyF+DWfvX10yDtU5rtk+kYmGy+Jm9IPppU10fXuG47iX+mq5/p+qbohR6XB1axgTKtNODukl
        5jAnhD+Bqat3yrTknVeXtzQ7zf4BAAD//wMAQ1TfF0oDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c8e46d46a138fd9-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 25 Sep 2024 21:58:38 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '627'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3999807'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 2ms
      x-request-id:
      - req_becabbc17b069d21658bbd00a39ae7e4
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "This is a test about generating synthetic data
      about medical_billing. Examples below:\n\npatient_id: 987654, patient_name:
      Samantha Johnson, diagnosis_code: H40.9, procedure_code: 99204, total_charge:
      400.0, insurance_claim_amount: 300.0\n\npatient_id: 123456, patient_name: Rufus
      Von Schnauzer, diagnosis_code: F32.9, procedure_code: 99203, total_charge: 250.0,
      insurance_claim_amount: 200.0\n\npatient_id: 456789, patient_name: Seraphina
      Blackwood, diagnosis_code: G47.9, procedure_code: 97110, total_charge: 350.0,
      insurance_claim_amount: 275.0\n\nNow you generate synthetic data about medical_billing.
      Make sure to the name must be chosen at random. Make it something you wouldn''t
      normally choose.:", "role": "user"}], "model": "gpt-3.5-turbo", "function_call":
      {"name": "_OutputFormatter"}, "functions": [{"name": "_OutputFormatter", "description":
      "Output formatter. Should always be used to format your response to the user.",
      "parameters": {"properties": {"output": {"properties": {"patient_id": {"type":
      "integer"}, "patient_name": {"type": "string"}, "diagnosis_code": {"type": "string"},
      "procedure_code": {"type": "string"}, "total_charge": {"type": "number"}, "insurance_claim_amount":
      {"type": "number"}}, "required": ["patient_id", "patient_name", "diagnosis_code",
      "procedure_code", "total_charge", "insurance_claim_amount"], "type": "object"}},
      "required": ["output"], "type": "object"}}], "n": 1, "stream": false, "temperature":
      1.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1478'
      content-type:
      - application/json
      cookie:
      - __cf_bm=UqeSYHEVqgoYmBSjHL.7YzlscjeU4c0swS.EbAivzGM-1727301516-1.0.1.1-WU9qK1EcrgnCGWDJmUW7obMs4IWXciBpbMpzD0tVuUxG.DBBL_ytNqegYK0U1Nckbn4cV6DKRxcw802drnWb6A;
        _cfuvid=T0h4_wXPgesdugPjrtHdMesmmv2xWiNsXzd89Z5Zlig-1727301516571-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.45.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.45.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//dJLLbtswEEX3+gpi1rKhRwTb2iVBU7RFUaRPFFUh0NRYZsuHSg7RBob/
        vaDkWE6AbLSYM/fqzgwPCWMgO6gZiD0noQe1uL758vbP13tz++7b7fZei4/886u/V9vvxevq0w7S
        qLDbXyjoUbUUVg8KSVozYeGQE0bXfFWsyiyv8vUItO1QRVk/0KJcVgsKbmsXWV5UJ+XeSoEeavYj
        YYyxw/iNGU2H/6BmWfpY0eg97xHqcxNj4KyKFeDeS0/cEKQzFNYQmhjbBKUuwC4YEdO3giv1xJAx
        MFyPlu2HQEOgO+s0J0J34cwYcNcHjYZidDg0YMfmBupDAwMniYZa2TVQ52W12hTpXI3+DdQNXCv7
        4GXw7L24C12nsIG0gU7y3lgvfStsNzW+ybMRDc4K7ILDGW02RV6OkCxx1Yo9d31EZZYts7QBaXxw
        3AhsheJSt1zbYGLOosqW2fEI56GOFwtyuAueq9PmkmcNoGw/OLv1zzYLO2mk37cOubcmLsaTHaY/
        HBPGfo4nD0+uGIfSA7Vkf6OJhsU6n/xgfmUzvVqd4DTuuV4W65dUbYfEpfIXd4YpoTT97JCdY45z
        gn/whLrdSdOjG5w8v6PkmPwHAAD//wMAdnTJb0YDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c8e46d9f98f8fd9-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 25 Sep 2024 21:58:39 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '681'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3999809'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 2ms
      x-request-id:
      - req_3b43261d442eb045b634348b3faba231
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "This is a test about generating synthetic data
      about medical_billing. Examples below:\n\npatient_id: 123456, patient_name:
      Rufus Von Schnauzer, diagnosis_code: F32.9, procedure_code: 99203, total_charge:
      250.0, insurance_claim_amount: 200.0\n\npatient_id: 456789, patient_name: Seraphina
      Blackwood, diagnosis_code: G47.9, procedure_code: 97110, total_charge: 350.0,
      insurance_claim_amount: 275.0\n\npatient_id: 135792, patient_name: Aloysius
      McFuddle, diagnosis_code: I10, procedure_code: 99213, total_charge: 300.0, insurance_claim_amount:
      250.0\n\nNow you generate synthetic data about medical_billing. Make sure to
      the name must be chosen at random. Make it something you wouldn''t normally
      choose.:", "role": "user"}], "model": "gpt-3.5-turbo", "function_call": {"name":
      "_OutputFormatter"}, "functions": [{"name": "_OutputFormatter", "description":
      "Output formatter. Should always be used to format your response to the user.",
      "parameters": {"properties": {"output": {"properties": {"patient_id": {"type":
      "integer"}, "patient_name": {"type": "string"}, "diagnosis_code": {"type": "string"},
      "procedure_code": {"type": "string"}, "total_charge": {"type": "number"}, "insurance_claim_amount":
      {"type": "number"}}, "required": ["patient_id", "patient_name", "diagnosis_code",
      "procedure_code", "total_charge", "insurance_claim_amount"], "type": "object"}},
      "required": ["output"], "type": "object"}}], "n": 1, "stream": false, "temperature":
      1.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1477'
      content-type:
      - application/json
      cookie:
      - __cf_bm=UqeSYHEVqgoYmBSjHL.7YzlscjeU4c0swS.EbAivzGM-1727301516-1.0.1.1-WU9qK1EcrgnCGWDJmUW7obMs4IWXciBpbMpzD0tVuUxG.DBBL_ytNqegYK0U1Nckbn4cV6DKRxcw802drnWb6A;
        _cfuvid=T0h4_wXPgesdugPjrtHdMesmmv2xWiNsXzd89Z5Zlig-1727301516571-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.45.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.45.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//dJJPj9MwEMXv+RTWnNPKbVra5gYSe6BiEVotBzYocp1p6sV/gj2WgKrf
        HTnpJt2VuOQwv3kvb2Z8zhgD1UDJQJ4ESdPp2fsPj588v9tv7x/2ev/rG4kNPn99/P73o9Qe8qRw
        h2eU9KKaS2c6jaScHbD0KAiT62Kz3BR8sV7semBcgzrJ2o5mxXw9o+gPbsYXy/VVeXJKYoCSPWWM
        MXbuvymjbfA3lIznLxWDIYgWoRybGAPvdKqACEEFEpYgn6B0ltCm2DZqfQOO0cqUvpZC61eGjIEV
        presv0TqIt05bwQR+htnxkD4Nhq0lKLDuQLXN1dQnivoBCm0VKumgnK33bxbr/KpmvwrKCv47Dwp
        g549WNe0XoRQQV5Bo0RrXVChlq4ZOu9XfM572HknsYkeJ7jj22LTQ3IkdC1PwrcJrTif87wCZUP0
        wkqspRbK1MK4aFPUYsnn/HKBca7LzY48HmMQ+rq87E0DaNd23h3Cm+XCUVkVTrVHEZxNuwnkuuEP
        l4yxH/3V46tDpqFMRzW5n2iT4XJbDH4wPbSJrnZXOIw71oti+T9V3SAJpcPNqWFIqGw7OfAxZj8n
        hD+B0NRHZVv0nVfjU8ou2T8AAAD//wMArwpZSkkDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c8e46e029788fd9-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 25 Sep 2024 21:58:40 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '721'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3999809'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 2ms
      x-request-id:
      - req_3614804e7436a1de96f5c06097a7abae
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "This is a test about generating synthetic data
      about medical_billing. Examples below:\n\npatient_id: 456789, patient_name:
      Seraphina Blackwood, diagnosis_code: G47.9, procedure_code: 97110, total_charge:
      350.0, insurance_claim_amount: 275.0\n\npatient_id: 135792, patient_name: Aloysius
      McFuddle, diagnosis_code: I10, procedure_code: 99213, total_charge: 300.0, insurance_claim_amount:
      250.0\n\npatient_id: 987654, patient_name: Mortimer Snodgrass, diagnosis_code:
      N40.0, procedure_code: 90837, total_charge: 400.0, insurance_claim_amount: 320.0\n\nNow
      you generate synthetic data about medical_billing. Make sure to the name must
      be chosen at random. Make it something you wouldn''t normally choose.:", "role":
      "user"}], "model": "gpt-3.5-turbo", "function_call": {"name": "_OutputFormatter"},
      "functions": [{"name": "_OutputFormatter", "description": "Output formatter.
      Should always be used to format your response to the user.", "parameters": {"properties":
      {"output": {"properties": {"patient_id": {"type": "integer"}, "patient_name":
      {"type": "string"}, "diagnosis_code": {"type": "string"}, "procedure_code":
      {"type": "string"}, "total_charge": {"type": "number"}, "insurance_claim_amount":
      {"type": "number"}}, "required": ["patient_id", "patient_name", "diagnosis_code",
      "procedure_code", "total_charge", "insurance_claim_amount"], "type": "object"}},
      "required": ["output"], "type": "object"}}], "n": 1, "stream": false, "temperature":
      1.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1476'
      content-type:
      - application/json
      cookie:
      - __cf_bm=UqeSYHEVqgoYmBSjHL.7YzlscjeU4c0swS.EbAivzGM-1727301516-1.0.1.1-WU9qK1EcrgnCGWDJmUW7obMs4IWXciBpbMpzD0tVuUxG.DBBL_ytNqegYK0U1Nckbn4cV6DKRxcw802drnWb6A;
        _cfuvid=T0h4_wXPgesdugPjrtHdMesmmv2xWiNsXzd89Z5Zlig-1727301516571-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.45.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.45.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//dJJbi9swEIXf/SvEPCfBl/Ve/NYtLKUtlEIvtHUxijyxtasb0qg0Dfnv
        RXYaZxf64of55hyfmdEhYwxkDw0DMXIS2qn1q/vPb8OXj7p6uhf216N6/efrt70L7t2b2/d7WCWF
        3T6ioH+qjbDaKSRpzYyFR06YXIub8qbKi7rMJ6BtjyrJBkfralOvKfqtXedFWZ+Uo5UCAzTsR8YY
        Y4fpmzKaHn9DwyafqaIxBD4gNOcmxsBblSrAQ5CBuCFYLVBYQ2hSbBOVugC7aERK3wmu1DNDxsBw
        PVl2HyK5SA/Wa06E/sKZMeB+iBoNpehwaMFOzS00hxYcJ4mGOtm30BRldVVfr5Zq8m+haeE7unHv
        2acxmh69UNy1sGqhl3wwNsjQCdvPnQ9VubmboPNWYB89LvC2vi7yCZIlrjoxcj8kVNb5Jl+1IE2I
        nhuBnVBc6o5rG02KWub5Jj8e4TzX8WJHHncxcHVaXvaiAZQdnLfb8GK5sJNGhrHzyIM1aTeBrJv/
        cMwY+zldPT47ZBpKO+rIPqFJhuVtOfvB8tAWenV3gvO453pVFf9TdT0SlypcnBrmhNIMi0N+jjnN
        CWEfCHW3k2ZA77w8P6XsmP0FAAD//wMAgwbbwkkDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c8e46e7cb9f8fd9-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 25 Sep 2024 21:58:42 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '1308'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3999809'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 2ms
      x-request-id:
      - req_9460698d2926477e5125ba127206d215
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "This is a test about generating synthetic data
      about medical_billing. Examples below:\n\npatient_id: 135792, patient_name:
      Aloysius McFuddle, diagnosis_code: I10, procedure_code: 99213, total_charge:
      300.0, insurance_claim_amount: 250.0\n\npatient_id: 987654, patient_name: Mortimer
      Snodgrass, diagnosis_code: N40.0, procedure_code: 90837, total_charge: 400.0,
      insurance_claim_amount: 320.0\n\npatient_id: 123456, patient_name: Zephyr Thunderclap,
      diagnosis_code: F32.9, procedure_code: 85610, total_charge: 250.0, insurance_claim_amount:
      200.0\n\nNow you generate synthetic data about medical_billing. Make sure to
      the name must be chosen at random. Make it something you wouldn''t normally
      choose.:", "role": "user"}], "model": "gpt-3.5-turbo", "function_call": {"name":
      "_OutputFormatter"}, "functions": [{"name": "_OutputFormatter", "description":
      "Output formatter. Should always be used to format your response to the user.",
      "parameters": {"properties": {"output": {"properties": {"patient_id": {"type":
      "integer"}, "patient_name": {"type": "string"}, "diagnosis_code": {"type": "string"},
      "procedure_code": {"type": "string"}, "total_charge": {"type": "number"}, "insurance_claim_amount":
      {"type": "number"}}, "required": ["patient_id", "patient_name", "diagnosis_code",
      "procedure_code", "total_charge", "insurance_claim_amount"], "type": "object"}},
      "required": ["output"], "type": "object"}}], "n": 1, "stream": false, "temperature":
      1.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1475'
      content-type:
      - application/json
      cookie:
      - __cf_bm=UqeSYHEVqgoYmBSjHL.7YzlscjeU4c0swS.EbAivzGM-1727301516-1.0.1.1-WU9qK1EcrgnCGWDJmUW7obMs4IWXciBpbMpzD0tVuUxG.DBBL_ytNqegYK0U1Nckbn4cV6DKRxcw802drnWb6A;
        _cfuvid=T0h4_wXPgesdugPjrtHdMesmmv2xWiNsXzd89Z5Zlig-1727301516571-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.45.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.45.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA3RSy27bMBC86yuIPduGLFmRoVsKtAWKFi1aFD1UAUFTa5kNHwq5RNIY/veCkmM5
        AXrhYWdnODu7x4wxUB00DORBkDSDXt6++/kp3tL7H4+PT/efH778en5+0DfDZrMLVYRFYrjdH5T0
        wlpJZwaNpJydYOlRECbVdV3UZb6uimIEjOtQJ1o/0LJcVUuKfueW+bqozsyDUxIDNOx3xhhjx/FN
        Hm2HT9CwfPFSMRiC6BGaSxNj4J1OFRAhqEDCEixmUDpLaJNtG7W+AvbRyuSeS6H1K0HGwAozSvKv
        kYZIH5w3ggj9lTJjIHwfDVpK1uHYghubW2iOLQyCFFriqmuhKTY323W+mKtJv4Wmhe/YKyt0x76J
        FKdxMQRsYdFCp0RvXVCBS9dNzR839SofwcE7iV30OIN1vSnqESRHQnN5EL5PUFnlq/S3siF6YSVy
        qYUyXBgXbXJbbPNVfjrBZbTTVUwe9zEIfc4ve9MA2vWDd7vwJl/YK6vCgXsUwdkUTyA3TD+cMsbu
        xsXHV7tMQ5mBOLl7tEmw2JaTHsy3NqPV+SrO417qZflfFu+QhNLhatswOVS2nxXyi81xTgh/A6Hh
        e2V79INXl2vKTtk/AAAA//8DAAfN66lMAwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c8e46f0c8878fd9-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 25 Sep 2024 21:58:42 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '742'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3999809'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 2ms
      x-request-id:
      - req_1f2992f713e2ecffa6873ec7124af2e1
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "This is a test about generating synthetic data
      about medical_billing. Examples below:\n\npatient_id: 987654, patient_name:
      Mortimer Snodgrass, diagnosis_code: N40.0, procedure_code: 90837, total_charge:
      400.0, insurance_claim_amount: 320.0\n\npatient_id: 123456, patient_name: Zephyr
      Thunderclap, diagnosis_code: F32.9, procedure_code: 85610, total_charge: 250.0,
      insurance_claim_amount: 200.0\n\npatient_id: 246810, patient_name: Reginald
      Pamplemousse, diagnosis_code: G47.0, procedure_code: 77427, total_charge: 350.0,
      insurance_claim_amount: 280.0\n\nNow you generate synthetic data about medical_billing.
      Make sure to the name must be chosen at random. Make it something you wouldn''t
      normally choose.:", "role": "user"}], "model": "gpt-3.5-turbo", "function_call":
      {"name": "_OutputFormatter"}, "functions": [{"name": "_OutputFormatter", "description":
      "Output formatter. Should always be used to format your response to the user.",
      "parameters": {"properties": {"output": {"properties": {"patient_id": {"type":
      "integer"}, "patient_name": {"type": "string"}, "diagnosis_code": {"type": "string"},
      "procedure_code": {"type": "string"}, "total_charge": {"type": "number"}, "insurance_claim_amount":
      {"type": "number"}}, "required": ["patient_id", "patient_name", "diagnosis_code",
      "procedure_code", "total_charge", "insurance_claim_amount"], "type": "object"}},
      "required": ["output"], "type": "object"}}], "n": 1, "stream": false, "temperature":
      1.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1481'
      content-type:
      - application/json
      cookie:
      - __cf_bm=UqeSYHEVqgoYmBSjHL.7YzlscjeU4c0swS.EbAivzGM-1727301516-1.0.1.1-WU9qK1EcrgnCGWDJmUW7obMs4IWXciBpbMpzD0tVuUxG.DBBL_ytNqegYK0U1Nckbn4cV6DKRxcw802drnWb6A;
        _cfuvid=T0h4_wXPgesdugPjrtHdMesmmv2xWiNsXzd89Z5Zlig-1727301516571-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.45.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.45.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//dJLLbtswEEX3+gpi1rKhhxUn2iUtgqJoEaBIV1VAUBQlM+ZDIIdFDMP/
        XlByLCdAN1rMmXt1Z4bHhBCQHdQE+I4h16Na3T/8/v7Xv4bDV/2jux3u97/ehi/PG/uEt+03SKPC
        tq+C47tqza0elUBpzYy5EwxFdM23xbbM8qooJ6BtJ1SUDSOuynW1wuBau8ryojord1Zy4aEmfxJC
        CDlO35jRdOINapKl7xUtvGeDgPrSRAg4q2IFmPfSIzMI6QK5NShMjG2CUlegD4bH9JQzpT4YEgKG
        6cmSPgUcAz5apxmicFfOhABzQ9DCYIwOxwbs1NxAfWxgZCiFQSq7Buq8rLZ3RbpUo38DdQMPoW2V
        8OQnf1Sh7w97aXwDaQOdZIOxXnrKbTf3PufVOp/g6CwXXXBigTd5UW4miBaZonzH3BBRmWXrLG1A
        Gh8cM1xQrpjUlGkbTAxbbLJ1djrBZbLT1Zac6INn6ry+5FMDKDuMzrb+03qhl0b6HXWCeWvidjza
        cf7DKSHkZbp7+HDKOJQekaLdCxMNi9ub2Q+Wp7bQzd0ZzuNe6mVZ/U9FO4FMKn91bJgTSjMsDtkl
        5jQn+INHoWkvzSDc6OTlMSWn5B8AAAD//wMA8HYJqUsDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c8e46f73a328fd9-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 25 Sep 2024 21:58:44 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '701'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3999808'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 2ms
      x-request-id:
      - req_55ff50057f3281f3a8c192bce5546426
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "This is a test about generating synthetic data
      about medical_billing. Examples below:\n\npatient_id: 123456, patient_name:
      Zephyr Thunderclap, diagnosis_code: F32.9, procedure_code: 85610, total_charge:
      250.0, insurance_claim_amount: 200.0\n\npatient_id: 246810, patient_name: Reginald
      Pamplemousse, diagnosis_code: G47.0, procedure_code: 77427, total_charge: 350.0,
      insurance_claim_amount: 280.0\n\npatient_id: 135792, patient_name: Bubbles McFluffykins,
      diagnosis_code: T15.1, procedure_code: 61234, total_charge: 300.0, insurance_claim_amount:
      240.0\n\nNow you generate synthetic data about medical_billing. Make sure to
      the name must be chosen at random. Make it something you wouldn''t normally
      choose.:", "role": "user"}], "model": "gpt-3.5-turbo", "function_call": {"name":
      "_OutputFormatter"}, "functions": [{"name": "_OutputFormatter", "description":
      "Output formatter. Should always be used to format your response to the user.",
      "parameters": {"properties": {"output": {"properties": {"patient_id": {"type":
      "integer"}, "patient_name": {"type": "string"}, "diagnosis_code": {"type": "string"},
      "procedure_code": {"type": "string"}, "total_charge": {"type": "number"}, "insurance_claim_amount":
      {"type": "number"}}, "required": ["patient_id", "patient_name", "diagnosis_code",
      "procedure_code", "total_charge", "insurance_claim_amount"], "type": "object"}},
      "required": ["output"], "type": "object"}}], "n": 1, "stream": false, "temperature":
      1.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1483'
      content-type:
      - application/json
      cookie:
      - __cf_bm=UqeSYHEVqgoYmBSjHL.7YzlscjeU4c0swS.EbAivzGM-1727301516-1.0.1.1-WU9qK1EcrgnCGWDJmUW7obMs4IWXciBpbMpzD0tVuUxG.DBBL_ytNqegYK0U1Nckbn4cV6DKRxcw802drnWb6A;
        _cfuvid=T0h4_wXPgesdugPjrtHdMesmmv2xWiNsXzd89Z5Zlig-1727301516571-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.45.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.45.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//dFLLbtswELzrK4g9y4Ys2XGiW3tI0boPFG1PVUHQ1FpiyodALuM2hv+9
        oOxYToBeeNjZGc7s7iFjDFQLNQPZC5Jm0LM3b3982H/u3+83+4/4tBfv7p+6m/Zxs/lKtIE8Mdz2
        ASU9s+bSmUEjKWdPsPQoCJPqYl2uq2KxKpcjYFyLOtG6gWbVfDWj6LduVizK1ZnZOyUxQM1+Zowx
        dhjf5NG2+AdqVuTPFYMhiA6hvjQxBt7pVAERggokLEE+gdJZQpts26j1FbCLVib3XAqtXwgyBlaY
        UZJ/iTREunfeCCL0V8qMgfBdNGgpWYdDA25sbqA+NDAIUmiJq7aB+u52fbNa5lM16TdQN/DtEe2D
        YN/7aFv0W+1CcKaBvIFWic66oAKXrj01fyqL+d0IDt5JbKPHCbyrFtVyBMmR0Fz2wncJWhbFvMgb
        UDZEL6xELrVQhgvjok1uq7KYF8cjXKIdr8bkcReD0Of5Za8aQLtu8G4bXs0Xdsqq0HOPIjibxhPI
        Dacfjhljv8bFxxe7TKHMQJzcb7RJsLxdn/RgurUJXZ2v4hz3Uq+q/7J4iySUDlfbhpNDZbtJobjY
        HHNC+BsIDd8p26EfvLpcU3bM/gEAAP//AwA+PfnyTAMAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c8e46fd2a878fd9-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 25 Sep 2024 21:58:45 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '802'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3999807'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 2ms
      x-request-id:
      - req_4643952d7296a9cf221520a0fdcadcd9
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "This is a test about generating synthetic data
      about medical_billing. Examples below:\n\npatient_id: 246810, patient_name:
      Reginald Pamplemousse, diagnosis_code: G47.0, procedure_code: 77427, total_charge:
      350.0, insurance_claim_amount: 280.0\n\npatient_id: 135792, patient_name: Bubbles
      McFluffykins, diagnosis_code: T15.1, procedure_code: 61234, total_charge: 300.0,
      insurance_claim_amount: 240.0\n\npatient_id: 987654, patient_name: Svenja Thunderblossom,
      diagnosis_code: M20.9, procedure_code: 93134, total_charge: 400.0, insurance_claim_amount:
      320.0\n\nNow you generate synthetic data about medical_billing. Make sure to
      the name must be chosen at random. Make it something you wouldn''t normally
      choose.:", "role": "user"}], "model": "gpt-3.5-turbo", "function_call": {"name":
      "_OutputFormatter"}, "functions": [{"name": "_OutputFormatter", "description":
      "Output formatter. Should always be used to format your response to the user.",
      "parameters": {"properties": {"output": {"properties": {"patient_id": {"type":
      "integer"}, "patient_name": {"type": "string"}, "diagnosis_code": {"type": "string"},
      "procedure_code": {"type": "string"}, "total_charge": {"type": "number"}, "insurance_claim_amount":
      {"type": "number"}}, "required": ["patient_id", "patient_name", "diagnosis_code",
      "procedure_code", "total_charge", "insurance_claim_amount"], "type": "object"}},
      "required": ["output"], "type": "object"}}], "n": 1, "stream": false, "temperature":
      1.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1486'
      content-type:
      - application/json
      cookie:
      - __cf_bm=UqeSYHEVqgoYmBSjHL.7YzlscjeU4c0swS.EbAivzGM-1727301516-1.0.1.1-WU9qK1EcrgnCGWDJmUW7obMs4IWXciBpbMpzD0tVuUxG.DBBL_ytNqegYK0U1Nckbn4cV6DKRxcw802drnWb6A;
        _cfuvid=T0h4_wXPgesdugPjrtHdMesmmv2xWiNsXzd89Z5Zlig-1727301516571-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.45.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.45.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//dFJNj9MwEL3nV1hzTqs0adRubovELiABB6g4bFDkOtPE4I/IHqMuVf87
        ctJtuitx8WHevOf3ZuaUMAayhYqB6DkJPajF/bvdp2N/fNy937XrwB++/D38+Ga0pbsPj0dII8Pu
        f6GgF9ZSWD0oJGnNBAuHnDCqrjb5pshWZV6OgLYtqkjrBloUy3JBwe3tIlvl5YXZWynQQ8WeEsYY
        O41v9GhaPELFsvSlotF73iFU1ybGwFkVK8C9l564IUhnUFhDaKJtE5S6AQ7BiOi+EVypV4KMgeF6
        lGy+BhoCPVinORG6G2XGgLsuaDQUrcOpBjs211Cdahg4STTUyLaGalWUm3ydztWoX0NVw72yz14G
        zz6L7/yP9H0NaQ2t5J2xXvpG2HZq/Fhmy7sRHJwV2AaHM7je5kU2gmSJq0b03HURyjflMktrkMYH
        x43ARigudcO1DSY6zfNsmZ3PcI11vhmRw0PwXF1ml7xpAGW7wdm9fzNbOEgjfd845N6aOBpPdph+
        OCeM/RyXHl7tMYbSAzVkf6OJgvl2O+nBfGczWl4u4hL3Wi+K/7KaFolL5W82DZNDabpZIbvaHHOC
        f/aEujlI06EbnLxeUnJO/gEAAP//AwANr69VSAMAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c8e4703ab838fd9-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 25 Sep 2024 21:58:46 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '776'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3999806'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 2ms
      x-request-id:
      - req_0003cb9ff81c7570e2d2f23acbeaa604
    status:
      code: 200
      message: OK
version: 1
