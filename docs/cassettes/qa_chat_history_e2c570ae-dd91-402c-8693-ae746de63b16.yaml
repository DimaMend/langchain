interactions:
- request:
    body: '{"messages": [{"content": "Hi! I''m bob", "role": "user"}, {"content":
      "Hello Bob! How can I assist you today?", "role": "assistant"}, {"content":
      "What is Task Decomposition?", "role": "user"}], "model": "gpt-3.5-turbo", "n":
      1, "stream": false, "temperature": 0.0, "tools": [{"type": "function", "function":
      {"name": "blog_post_retriever", "description": "Searches and returns excerpts
      from the Autonomous Agents blog post.", "parameters": {"properties": {"query":
      {"description": "query to look up in retriever", "type": "string"}}, "required":
      ["query"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '579'
      content-type:
      - application/json
      cookie:
      - __cf_bm=S9CaKJjlRKMgapR4feoPhcVCXu5HNw9ouMhsxuXq.sU-1727447408-1.0.1.1-B03gfQ5b8oM_0t6ZzWgUnOaIkcduwHoYgZP7H25Nf0pCKbUSHSBUbDPq2zhHWxP7OPqNXr8lGZCszwLJOlg8YQ;
        _cfuvid=ty_zC0bzJUD.U5UPPZYqWFP.KB3qzsUYJFkIrsa_930-1727447408230-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.48.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.48.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//dFJdb5tAEHznV5z22Y4gdUrCW9Wotey8uV9pXaEzrPE5xy25W9Igy/+9
        OrCBWC0Pp9MOM7M7e4dACFA5JAKyneSsrPT0w8f383AVuT9M+2+ZWd6vFvkKzeOPOLxtYOIZtNlj
        xmfWVUZlpZEVmQ7OLEpGrxrF1/FsFs+iWQuUlKP2tKLi6burmynXdkPTMLq+OTF3pDJ0kIhfgRBC
        HNrT92hyfIVEhJNzpUTnZIGQ9D8JAZa0r4B0TjmWhmEygBkZRuPbNrXWI4CJdJpJrQfj7juM7kNQ
        Uuv08755Xiw+fY1/hg+vD48vy2hO35fz25FfJ91UbUPb2mR9QCO8rycXZkKAkWXL3Wgq0oocpxbZ
        KnxBeyEjBEhb1CUa9iPAYQ3PNdpmDckavkj3JO7RL4mc8mZrOMIb/jH41/33KCKL29pJfcruVD/2
        y9BUVJY27iJb2Cqj3C61KF074zjq4OzW+kD9ZptQWSorTpme0HjZu6gTheGxDWB0dwKZWOpRPQr/
        x0pzZKnajfePrGtTmWJQCPsu22HBNY6xTLfKFGgrq/rnFByDvwAAAP//AwDr9SjqTQMAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c9c30c0bb2a8f65-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 27 Sep 2024 14:30:14 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '284'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3999961'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_db886554e29cb74e549a405892dd4bac
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[6396, 97478, 3571]], "model": "text-embedding-ada-002", "encoding_format":
      "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '96'
      content-type:
      - application/json
      cookie:
      - __cf_bm=_SkX10_lz_dX1guPhghsUYAz4_9kWqoLA5uNrUkQB18-1727447406-1.0.1.1-Hbwqr14cIbBH0gj8B1mx9a96FHwcQ0zFiSd700EllAydhGfmuJvCorr0hPCbtfl2nG4OnDCQCd1OOKW5VHRCzg;
        _cfuvid=_gLrQReNbyL5vxKd7xmYmcYUDElVbJf1pTZYccPx6LE-1727447406444-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.48.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.48.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        Sd4gAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c9c30c42cfb4d10-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 27 Sep 2024 14:30:14 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      openai-model:
      - text-embedding-ada-002
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '30'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '5000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '4999997'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_11a6c6dcfed85bcf8aa44ab71772b479
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "Hi! I''m bob", "role": "user"}, {"content":
      "Hello Bob! How can I assist you today?", "role": "assistant"}, {"content":
      "What is Task Decomposition?", "role": "user"}, {"content": null, "role": "assistant",
      "tool_calls": [{"type": "function", "id": "call_GjyqJJFU7Z0LxLYvK1HoWKH8", "function":
      {"name": "blog_post_retriever", "arguments": "{\"query\": \"Task Decomposition\"}"}}]},
      {"content": "Fig. 1. Overview of a LLM-powered autonomous agent system.\nComponent
      One: Planning#\nA complicated task usually involves many steps. An agent needs
      to know what they are and plan ahead.\nTask Decomposition#\nChain of thought
      (CoT; Wei et al. 2022) has become a standard prompting technique for enhancing
      model performance on complex tasks. The model is instructed to \u201cthink step
      by step\u201d to utilize more test-time computation to decompose hard tasks
      into smaller and simpler steps. CoT transforms big tasks into multiple manageable
      tasks and shed lights into an interpretation of the model\u2019s thinking process.\n\nTree
      of Thoughts (Yao et al. 2023) extends CoT by exploring multiple reasoning possibilities
      at each step. It first decomposes the problem into multiple thought steps and
      generates multiple thoughts per step, creating a tree structure. The search
      process can be BFS (breadth-first search) or DFS (depth-first search) with each
      state evaluated by a classifier (via a prompt) or majority vote.\nTask decomposition
      can be done (1) by LLM with simple prompting like \"Steps for XYZ.\\n1.\", \"What
      are the subgoals for achieving XYZ?\", (2) by using task-specific instructions;
      e.g. \"Write a story outline.\" for writing a novel, or (3) with human inputs.\n\n(3)
      Task execution: Expert models execute on the specific tasks and log results.\nInstruction:\n\nWith
      the input and the inference results, the AI assistant needs to describe the
      process and results. The previous stages can be formed as - User Input: {{ User
      Input }}, Task Planning: {{ Tasks }}, Model Selection: {{ Model Assignment }},
      Task Execution: {{ Predictions }}. You must first answer the user''s request
      in a straightforward manner. Then describe the task process and show your analysis
      and model inference results to the user in the first person. If inference results
      contain a file path, must tell the user the complete file path.\n\nFig. 11.
      Illustration of how HuggingGPT works. (Image source: Shen et al. 2023)\nThe
      system comprises of 4 stages:\n(1) Task planning: LLM works as the brain and
      parses the user requests into multiple tasks. There are four attributes associated
      with each task: task type, ID, dependencies, and arguments. They use few-shot
      examples to guide LLM to do task parsing and planning.\nInstruction:", "role":
      "tool", "tool_call_id": "call_GjyqJJFU7Z0LxLYvK1HoWKH8"}], "model": "gpt-3.5-turbo",
      "n": 1, "stream": false, "temperature": 0.0, "tools": [{"type": "function",
      "function": {"name": "blog_post_retriever", "description": "Searches and returns
      excerpts from the Autonomous Agents blog post.", "parameters": {"properties":
      {"query": {"description": "query to look up in retriever", "type": "string"}},
      "required": ["query"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3197'
      content-type:
      - application/json
      cookie:
      - __cf_bm=S9CaKJjlRKMgapR4feoPhcVCXu5HNw9ouMhsxuXq.sU-1727447408-1.0.1.1-B03gfQ5b8oM_0t6ZzWgUnOaIkcduwHoYgZP7H25Nf0pCKbUSHSBUbDPq2zhHWxP7OPqNXr8lGZCszwLJOlg8YQ;
        _cfuvid=ty_zC0bzJUD.U5UPPZYqWFP.KB3qzsUYJFkIrsa_930-1727447408230-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.48.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.48.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//dFJNb9swDL3nV3A6J0HSpU2b2zYM2A47DOiAFWsR0DJta5ZFVaTTBEX/
        +yA7TToMu/jAp/dB+j1PAIwrzQaMbVBtF/3sw6erL4vV6tveFz/ubvjm+u7pMta3j5/bxc/vZpoZ
        XPwmq6+sueUuelLHYYRtIlTKqsv1xXq1Wq+WqwHouCSfaXXU2fv55Uz7VPBssby4PDIbdpbEbODX
        BADgefjmjKGkvdnAYvo66UgEazKb0yMAk9jniUERJ4pBzfQMWg5KYYh9i9JCSTk4i8vJwQkgKNkm
        uMeeoBcqQRmKRNhCyU8BxjX3oCitgAvKIB16TwkwlCAuwwlEKcocbpusGGNitA005KMA9sqBO+4F
        sKagApxgOIpkrwZD6SkrJ2dR6ehUHKB0O1e6UIM21I3WHSeCDgPWhIUnkL4Yns/h4+G8Wqbk6fTV
        0GIAqiqy6nbkDxA9hiE+7cn2SkA5bt4hJ0LbONpRtgXeUULvoWb0c7gP9+FrBQfu4Yl7X4J3LY2h
        SlJ0nkpwoeLU4XBeTkB7zBcSSORzP7KB/vMjplAReagS0ZBA2ndvf2KiqhfMJQq998f5y6kVnuuY
        uJAjfppXLjhptolQOOQGiHI0A/oyAXgY2tf/VSgTE3dRt8othSx4tVyOeuZc+DO6Xh9BZUX/hnV9
        /T/WdryUvOmwGRO6UJ8VFqeYw55GDqLUbSsXakoxuaHSwzVeJn8AAAD//wMATUcxFdEDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c9c30c5b9538f65-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 27 Sep 2024 14:30:15 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '958'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3999386'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 9ms
      x-request-id:
      - req_64e83688e9fb5f55fd6414030d740585
    status:
      code: 200
      message: OK
version: 1
