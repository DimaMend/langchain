interactions:
- request:
    body: '{"messages": [{"content": "Hi! I''m bob", "role": "user"}, {"content":
      "Hello Bob! How can I assist you today?", "role": "assistant"}, {"content":
      "What is Task Decomposition?", "role": "user"}], "model": "gpt-3.5-turbo", "n":
      1, "stream": false, "temperature": 0.0, "tools": [{"type": "function", "function":
      {"name": "blog_post_retriever", "description": "Searches and returns excerpts
      from the Autonomous Agents blog post.", "parameters": {"properties": {"query":
      {"description": "query to look up in retriever", "type": "string"}}, "required":
      ["query"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '579'
      content-type:
      - application/json
      cookie:
      - __cf_bm=svG8xpfYNf8HqPokXq6.JTTlLsab.I6GhP0EMlMZWgw-1727449104-1.0.1.1-yp19_wwwbmkCHd5levnTVG3Zg.GUBsKC8J2naKZZXuKRyeDpatIb9ex0HD4wSiBhda9N1O0nRFGYVUMkLui3Dw;
        _cfuvid=FRhBnfl0B.OPjXlwpuqkQuVfmulpO0tJQjBRXFSbRTU-1727449104892-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.48.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.48.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//dFLBauMwEL37K8ScmxK38Yb4VroU9tAtXZZSdlOMLE8cNbKkSmOz2ZB/
        XySnthu6Pggxz++9mTc6JIyBrCBnILacRGPV7Ob2i7y/frotW/nryard3+fVflG6Z3m36DK4CAxT
        vqKgd9alMI1VSNLoHhYOOWFQTZdXy8VilabzCDSmQhVotaXZ9WU2o9aVZjZPr07CYmukQA85+50w
        xtghnqFHXeEfyFnUiZUGvec1Qj78xBg4o0IFuPfSE9cEFyMojCbUoW3dKjUByBhVCK7UaNx/h8l9
        DIorVTzgnVzy7+rHYyfTb69Z1T12Gd5nE79eem9jQ5tWiyGgCT7U8zMzxkDzJnJLZerCGk+FQ3IS
        O3RnMowBd3XboKYwAhzW8Nai268hX8NP7nfsK4YlGS+D2RqO8IF/TD67v0wicrhpPVen7E7147AM
        ZWrrTOnPsoWN1NJvC4fcxxmnUSfvbtEH2g/bBOtMY6kgs0MdZFdpLwrjYxvBdHUCyRBXk3o6/x+r
        qJC4jBsfHlnfptT1qDAfuozDgt97wqbYSF2js04Ozyk5Jv8AAAD//wMA/2UQ6U0DAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c9c5a29a98b4cf4-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 27 Sep 2024 14:58:30 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '368'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3999961'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_3e01957132c3d6c6377a931f4308ff02
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[6396, 97478, 3571]], "model": "text-embedding-ada-002", "encoding_format":
      "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '96'
      content-type:
      - application/json
      cookie:
      - __cf_bm=IkziaTvtUmKlpJ6hBD6feB_TIDyI4boVZA3o2BPhCL8-1727449102-1.0.1.1-O.6GwXzEQt97Xmx063yop4OpodgHCXvPoDrm2j1o11fitCx.HXCK6l3aOcxSYn8ImB8TrwwExhm9.i3_joGUXg;
        _cfuvid=mUjgjvAf3oXRxknfOJFguM.7C1A0icg48urbm4Rrj7I-1727449102443-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.48.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.48.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c9c5a2cdf8d8fb4-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 27 Sep 2024 14:58:30 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      openai-model:
      - text-embedding-ada-002
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '23'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '5000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '4999997'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_39f1923ae8a6a6d1e48c4e663877dec1
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "Hi! I''m bob", "role": "user"}, {"content":
      "Hello Bob! How can I assist you today?", "role": "assistant"}, {"content":
      "What is Task Decomposition?", "role": "user"}, {"content": null, "role": "assistant",
      "tool_calls": [{"type": "function", "id": "call_OeFi7aNlRQvi1Ij5dvQv5eM5", "function":
      {"name": "blog_post_retriever", "arguments": "{\"query\": \"Task Decomposition\"}"}}]},
      {"content": "Fig. 1. Overview of a LLM-powered autonomous agent system.\nComponent
      One: Planning#\nA complicated task usually involves many steps. An agent needs
      to know what they are and plan ahead.\nTask Decomposition#\nChain of thought
      (CoT; Wei et al. 2022) has become a standard prompting technique for enhancing
      model performance on complex tasks. The model is instructed to \u201cthink step
      by step\u201d to utilize more test-time computation to decompose hard tasks
      into smaller and simpler steps. CoT transforms big tasks into multiple manageable
      tasks and shed lights into an interpretation of the model\u2019s thinking process.\n\nTree
      of Thoughts (Yao et al. 2023) extends CoT by exploring multiple reasoning possibilities
      at each step. It first decomposes the problem into multiple thought steps and
      generates multiple thoughts per step, creating a tree structure. The search
      process can be BFS (breadth-first search) or DFS (depth-first search) with each
      state evaluated by a classifier (via a prompt) or majority vote.\nTask decomposition
      can be done (1) by LLM with simple prompting like \"Steps for XYZ.\\n1.\", \"What
      are the subgoals for achieving XYZ?\", (2) by using task-specific instructions;
      e.g. \"Write a story outline.\" for writing a novel, or (3) with human inputs.\n\n(3)
      Task execution: Expert models execute on the specific tasks and log results.\nInstruction:\n\nWith
      the input and the inference results, the AI assistant needs to describe the
      process and results. The previous stages can be formed as - User Input: {{ User
      Input }}, Task Planning: {{ Tasks }}, Model Selection: {{ Model Assignment }},
      Task Execution: {{ Predictions }}. You must first answer the user''s request
      in a straightforward manner. Then describe the task process and show your analysis
      and model inference results to the user in the first person. If inference results
      contain a file path, must tell the user the complete file path.\n\nFig. 11.
      Illustration of how HuggingGPT works. (Image source: Shen et al. 2023)\nThe
      system comprises of 4 stages:\n(1) Task planning: LLM works as the brain and
      parses the user requests into multiple tasks. There are four attributes associated
      with each task: task type, ID, dependencies, and arguments. They use few-shot
      examples to guide LLM to do task parsing and planning.\nInstruction:", "role":
      "tool", "tool_call_id": "call_OeFi7aNlRQvi1Ij5dvQv5eM5"}], "model": "gpt-3.5-turbo",
      "n": 1, "stream": false, "temperature": 0.0, "tools": [{"type": "function",
      "function": {"name": "blog_post_retriever", "description": "Searches and returns
      excerpts from the Autonomous Agents blog post.", "parameters": {"properties":
      {"query": {"description": "query to look up in retriever", "type": "string"}},
      "required": ["query"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3197'
      content-type:
      - application/json
      cookie:
      - __cf_bm=svG8xpfYNf8HqPokXq6.JTTlLsab.I6GhP0EMlMZWgw-1727449104-1.0.1.1-yp19_wwwbmkCHd5levnTVG3Zg.GUBsKC8J2naKZZXuKRyeDpatIb9ex0HD4wSiBhda9N1O0nRFGYVUMkLui3Dw;
        _cfuvid=FRhBnfl0B.OPjXlwpuqkQuVfmulpO0tJQjBRXFSbRTU-1727449104892-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.48.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.48.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA3RUTW8bRwy9+1cQe2qBlWCliYX6luhSFG2NFipgpCmM0Sx3h9UsOR1ybRmB/3sx
        o88k7mUX4Mfw8fGRn68AGuqaW2h8cObHFGfvVzf02ypf3/18/6v/+Psfrv/z44f7Xzq+w/ufmrZk
        yOYf9HbMmnsZU0Qj4b3bZ3SG5dXF8s3y7dsfF4tFdYzSYSxpQ7LZD/N3M5vyRmbXizfvDplByKM2
        t/DXFQDA5/otGLnDXXML1+3RMqKqG7C5PQUBNFlisTROldQcW9OenV7YkCvstdMtdFiAi1JBDqTg
        wNAHpn8nhEmxAxPYZHRb6OSJYd/mDszpVoHYBHR0MWIGxx0oFXcGNUw6h3UoL6aUxfkAAWNScJMJ
        yyiTghuQTUEyVFIUguMuYnk2k3eGhzKbZ+jokTriASzguK87SkYYHbsB3SYi6LSp4XP48Hzuq6QU
        a3us5h0D9j16o0eMz5Ci44odd+gnQ8CCtTTQQkS3LypAY8ryiB0kzL3k0bFHkK8ImcMn/sR3jMU8
        CsOIFqSDXnIN+JZuCwir4IhBelgHmYZg8N1K1t+f59DCUyAfIGUZk+mRLBOwQLytWAtH9V86OVZB
        6KjvyU/RXhtYDeJCyhzes1goQzwMq63I1hnxApi2gDtD7hRWsi4lcZei5ELROEWjFBEyOhUupiSq
        tKFIRqjg7JLZuh4lyIGVImp58jblWu5bquaF11cEW4a5QXA+EJbhWMgFKTy6TEVhe/61BZ18AKcw
        VUVEx8PkBjxS+UQWDto9sEw8tBXHTBN66skD8R4kCWtbRBum0TEQp8mOWk9ZPKoCcpHkSeEmRXLk
        Cdlek9xJ5nXTTjKvG7fX+oXM62pd7nTGflJXbgpPMR7sL6cjEWVIWTZ68J/sPTFpeNjPqxwENUlN
        9b5cAfxdj9H0xX1p9uQ8mGyRy4M3+6NWD8vx/p29i5ubg9fEXDw7lsvl/6U9dGiOol7ctOYkqfML
        1yectdFGn9VwfOiJB8wpUz1xlY6Xq/8AAAD//wMA/HPMsuEFAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c9c5a2fa8844cf4-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 27 Sep 2024 14:58:33 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '2242'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3999386'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 9ms
      x-request-id:
      - req_a12a38c3d53787e1e13ed24eafb6e3bc
    status:
      code: 200
      message: OK
version: 1
