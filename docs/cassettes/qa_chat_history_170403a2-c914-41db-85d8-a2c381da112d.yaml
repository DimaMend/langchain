interactions:
- request:
    body: '{"messages": [{"content": "What is Task Decomposition?", "role": "user"}],
      "model": "gpt-3.5-turbo", "n": 1, "stream": false, "temperature": 0.0, "tools":
      [{"type": "function", "function": {"name": "blog_post_retriever", "description":
      "Searches and returns excerpts from the Autonomous Agents blog post.", "parameters":
      {"properties": {"query": {"description": "query to look up in retriever", "type":
      "string"}}, "required": ["query"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '459'
      content-type:
      - application/json
      cookie:
      - __cf_bm=S9CaKJjlRKMgapR4feoPhcVCXu5HNw9ouMhsxuXq.sU-1727447408-1.0.1.1-B03gfQ5b8oM_0t6ZzWgUnOaIkcduwHoYgZP7H25Nf0pCKbUSHSBUbDPq2zhHWxP7OPqNXr8lGZCszwLJOlg8YQ;
        _cfuvid=ty_zC0bzJUD.U5UPPZYqWFP.KB3qzsUYJFkIrsa_930-1727447408230-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.48.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.48.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//dFLLbtswELzrK4g9x4EtO7GrW14oih6CAoEboC4EmlrJrPmQyVVr1/C/
        B6QcSTFaHQhiRzOzO8tjwhjIAjIGYsNJ6FqN7h5uP/8R9/fL6uvzbL9/9ncv3+SX7d8H8URbuAoM
        u/6Fgt5Z18LqWiFJa1pYOOSEQXUyT+ez2Xw2GUdA2wJVoFU1jabXNyNq3NqOxpP05szcWCnQQ8Z+
        JIwxdoxn6NEUuIeMRZ1Y0eg9rxCy7ifGwFkVKsC9l564IbjqQWENoQltm0apAUDWqlxwpXrj9jsO
        7n1QXKl8uUvL/ZheH5++L8pps9PFNH2dLtOBXyt9qGNDZWNEF9AA7+rZhRljYLiO3LWyVV5bT7lD
        chJ/o7uQYQy4qxqNhsIIcFzBrkF3WEG2ghfut+wRw5Ksl8FsBSf4wD8l/7r/HETksGw8V+fszvVT
        twxlq9rZtb/IFkpppN/kDrmPMw6jTt7dog80H7YJtbO6ppzsFk2QvV20otA/th6cfDqDZImrvr6Y
        /4+UF0hcxoV3b6ztUpqqFxh3TcZZwR88oc5LaSp0tZPda0pOyRsAAAD//wMARY/2gUwDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c9c30acea908f65-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 27 Sep 2024 14:30:11 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '339'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3999975'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_6759bb2e82b13d18590ebab2098cccfb
    status:
      code: 200
      message: OK
- request:
    body: '{"input": [[6396, 97478, 3571]], "model": "text-embedding-ada-002", "encoding_format":
      "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '96'
      content-type:
      - application/json
      cookie:
      - __cf_bm=_SkX10_lz_dX1guPhghsUYAz4_9kWqoLA5uNrUkQB18-1727447406-1.0.1.1-Hbwqr14cIbBH0gj8B1mx9a96FHwcQ0zFiSd700EllAydhGfmuJvCorr0hPCbtfl2nG4OnDCQCd1OOKW5VHRCzg;
        _cfuvid=_gLrQReNbyL5vxKd7xmYmcYUDElVbJf1pTZYccPx6LE-1727447406444-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.48.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.48.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c9c30b07c484d10-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 27 Sep 2024 14:30:11 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      openai-model:
      - text-embedding-ada-002
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '31'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '5000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '4999997'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_d841ae218d8423fd1b306a1cc823b5d7
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"content": "What is Task Decomposition?", "role": "user"},
      {"content": null, "role": "assistant", "tool_calls": [{"type": "function", "id":
      "call_Vq2fx0tXDEW8f3uqmd32X3V2", "function": {"name": "blog_post_retriever",
      "arguments": "{\"query\": \"Task Decomposition\"}"}}]}, {"content": "Fig. 1.
      Overview of a LLM-powered autonomous agent system.\nComponent One: Planning#\nA
      complicated task usually involves many steps. An agent needs to know what they
      are and plan ahead.\nTask Decomposition#\nChain of thought (CoT; Wei et al.
      2022) has become a standard prompting technique for enhancing model performance
      on complex tasks. The model is instructed to \u201cthink step by step\u201d
      to utilize more test-time computation to decompose hard tasks into smaller and
      simpler steps. CoT transforms big tasks into multiple manageable tasks and shed
      lights into an interpretation of the model\u2019s thinking process.\n\nTree
      of Thoughts (Yao et al. 2023) extends CoT by exploring multiple reasoning possibilities
      at each step. It first decomposes the problem into multiple thought steps and
      generates multiple thoughts per step, creating a tree structure. The search
      process can be BFS (breadth-first search) or DFS (depth-first search) with each
      state evaluated by a classifier (via a prompt) or majority vote.\nTask decomposition
      can be done (1) by LLM with simple prompting like \"Steps for XYZ.\\n1.\", \"What
      are the subgoals for achieving XYZ?\", (2) by using task-specific instructions;
      e.g. \"Write a story outline.\" for writing a novel, or (3) with human inputs.\n\n(3)
      Task execution: Expert models execute on the specific tasks and log results.\nInstruction:\n\nWith
      the input and the inference results, the AI assistant needs to describe the
      process and results. The previous stages can be formed as - User Input: {{ User
      Input }}, Task Planning: {{ Tasks }}, Model Selection: {{ Model Assignment }},
      Task Execution: {{ Predictions }}. You must first answer the user''s request
      in a straightforward manner. Then describe the task process and show your analysis
      and model inference results to the user in the first person. If inference results
      contain a file path, must tell the user the complete file path.\n\nFig. 11.
      Illustration of how HuggingGPT works. (Image source: Shen et al. 2023)\nThe
      system comprises of 4 stages:\n(1) Task planning: LLM works as the brain and
      parses the user requests into multiple tasks. There are four attributes associated
      with each task: task type, ID, dependencies, and arguments. They use few-shot
      examples to guide LLM to do task parsing and planning.\nInstruction:", "role":
      "tool", "tool_call_id": "call_Vq2fx0tXDEW8f3uqmd32X3V2"}], "model": "gpt-3.5-turbo",
      "n": 1, "stream": false, "temperature": 0.0, "tools": [{"type": "function",
      "function": {"name": "blog_post_retriever", "description": "Searches and returns
      excerpts from the Autonomous Agents blog post.", "parameters": {"properties":
      {"query": {"description": "query to look up in retriever", "type": "string"}},
      "required": ["query"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3077'
      content-type:
      - application/json
      cookie:
      - __cf_bm=S9CaKJjlRKMgapR4feoPhcVCXu5HNw9ouMhsxuXq.sU-1727447408-1.0.1.1-B03gfQ5b8oM_0t6ZzWgUnOaIkcduwHoYgZP7H25Nf0pCKbUSHSBUbDPq2zhHWxP7OPqNXr8lGZCszwLJOlg8YQ;
        _cfuvid=ty_zC0bzJUD.U5UPPZYqWFP.KB3qzsUYJFkIrsa_930-1727447408230-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.48.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.48.0
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA3RTwWobMRC9+yuGPdvGTpM49S1toZQQ6CGXUooZS7O7qiWNohk5NiH/XrR27ATS
        iw7z5j29N8w8jwAaZ5slNKZHNSH5ye3X6+87637dauxm9z9+3nV3v3T/bXaPj499M64MXv8lo6+s
        qeGQPKnjeIBNJlSqqvPFxeLycnE5nw9AYEu+0rqkk0/Tq4mWvObJbH5xdWT27AxJs4TfIwCA5+Gt
        HqOlXbOE2fi1EkgEO2qWpyaAJrOvlQZFnChGbcZn0HBUioPtB5QNWKrGWVx1Dk4AQcn00T0WgiJk
        QRnWmXADlp8iHGLuQFE2Ai4qgwT0njJgtCCuwhlEKckUHvqqmFJmND305FPlgGaM0nIOLnawdt1b
        tVC8uuQJAkbsCNeeDvAYAm4qwSkQiqMMLWfAohw5cBHAjqJKNVyipVyz28EV7cgUJdCewhQ+yG0w
        wprAcqyh6ydbzK5qBtKerYAU0wMKpMwhae3Qng4/wpPTHiSRca0zh+jj2rh1dmhE2UxOsIuiuZj6
        rYyBM7hoOCfOOKj2JWAEF1NRmcKX/dlo7D4a+gDGmnv8mr+GobYlo25Lfg/JY3w/hkFGGdD0jrYE
        lsRlssBFDQeS6duNydQWwbqxsXh/rL+cVtBzlzKv5Yif6q2LTvpVJhSOdd1EOTUD+jIC+DOsenm3
        vc1huCvlDcUqeHVzc9Brztd1Rm8+H0FlRX+uXy8W/2OtLCk6L28Opjk4dLE7K8xONoecjexFKaxa
        FzvKKbvhfoZpvIz+AQAA//8DAGmq4Nk+BAAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c9c30b1e8958f65-BOS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 27 Sep 2024 14:30:13 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-wzxwdcuddhvwm09z43ibeucf
      openai-processing-ms:
      - '1718'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '5000'
      x-ratelimit-limit-tokens:
      - '4000000'
      x-ratelimit-remaining-requests:
      - '4999'
      x-ratelimit-remaining-tokens:
      - '3999402'
      x-ratelimit-reset-requests:
      - 12ms
      x-ratelimit-reset-tokens:
      - 8ms
      x-request-id:
      - req_21917ec61fa5e87666d181ce01703c7d
    status:
      code: 200
      message: OK
version: 1
